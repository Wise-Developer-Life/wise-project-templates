plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id 'org.springdoc.openapi-gradle-plugin' version '1.7.0'
	id 'io.freefair.lombok' version '8.2.1'
	id 'com.diffplug.spotless' version '6.20.0'
}

group = 'com.wisedevlife'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

spotless {
	format 'misc', {
		target '*.gradle', '*.md', '.gitignore'

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}

	java {
		importOrder()
		removeUnusedImports()
		googleJavaFormat().aosp().reflowLongStrings().groupArtifact('com.google.googlejavaformat:google-java-format')

		formatAnnotations()
	}
}

ext {
	lombokVersion = '1.18.28'
	caffeineVersion = '3.1.5'
	prometheusVersion = '1.11.1'
	springDocVersion = '2.2.0'
}

openApi {
	apiDocsUrl.set("http://localhost:8080/api/docs")
	outputDir.set(file("${buildDir}/docs"))
	outputFileName.set("swagger.json")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation "io.micrometer:micrometer-registry-prometheus:${prometheusVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
	implementation "com.github.ben-manes.caffeine:caffeine:${caffeineVersion}"
	implementation "org.projectlombok:lombok:${lombokVersion}"

	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	compileOnly("org.springframework.boot:spring-boot-devtools")
	compileOnly "org.projectlombok:lombok:${lombokVersion}"

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
